/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var v=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var D=(d,i)=>{for(var t in i)v(d,t,{get:i[t],enumerable:!0})},E=(d,i,t,s)=>{if(i&&typeof i=="object"||typeof i=="function")for(let e of k(i))!F.call(d,e)&&e!==t&&v(d,e,{get:()=>i[e],enumerable:!(s=P(i,e))||s.enumerable});return d};var O=d=>E(v({},"__esModule",{value:!0}),d);var U={};D(U,{default:()=>b});module.exports=O(U);var l=require("obsidian");var n=require("obsidian"),o={ribbonIcon:!0,ribbonCommandUsesCode:!0,showFileContextMenuItem:!0,executeTemplate:'code "{{vaultpath}}" "{{vaultpath}}/{{filepath}}"',openFile:!0,workspacePath:"{{vaultpath}}",useUrlInsiders:!1},m=class extends n.PluginSettingTab{constructor(i,t){super(i,t),this.plugin=t}display(){let{containerEl:i}=this;i.empty(),i.createEl("h3",{text:"General settings"}),new n.Setting(i).setName("Display Ribbon Icon").setDesc("Toggle this OFF if you want to hide the Ribbon Icon.").addToggle(s=>s.setValue(this.plugin.settings.ribbonIcon).onChange(e=>{this.plugin.settings.ribbonIcon=e,this.plugin.saveSettings(),this.plugin.refreshIconRibbon()})),new n.Setting(i).setName("Ribbon opens via 'code' command").setDesc("Toggle this OFF if you'd prefer that the Ribbon Icon opens VSCode via URL.").addToggle(s=>s.setValue(this.plugin.settings.ribbonCommandUsesCode).onChange(e=>{this.plugin.settings.ribbonCommandUsesCode=e,this.plugin.saveSettings()})),new n.Setting(i).setName('Display "Open in VS Code" option for files/folders').setDesc('Toggle this OFF to hide the "Open in VS Code" option when right-clicking a file/folder.').addToggle(s=>s.setValue(this.plugin.settings.showFileContextMenuItem).onChange(e=>{this.plugin.settings.showFileContextMenuItem=e,this.plugin.saveSettings()})),i.createEl("h3",{text:"Open via 'code' CLI settings"}),new n.Setting(i).setName("Template for executing the 'code' command").setDesc(`You can use the following variables: '{{vaultpath}}' (absolute), '{{filepath}}' (relative), '{{folderpath}}' (relative), '{{line}}' and '{{ch}}'. Note that on MacOS, a full path to the VSCode executable is required (generally '/usr/local/bin/code'). Example template: "'/usr/local/bin/code' '{{vaultpath}}' '{{vaultpath}}/{{filepath}}'"`).addText(s=>s.setPlaceholder(o.executeTemplate).setValue(this.plugin.settings.executeTemplate||o.executeTemplate).onChange(e=>{e=e.trim(),e===""&&(e=o.executeTemplate),this.plugin.settings.executeTemplate=e,this.plugin.saveData(this.plugin.settings)})),i.createEl("h3",{text:"Open via 'vscode://' URL settings"}),i.createEl("p",{text:"See: "}).appendChild(createEl("a",{text:"Opening VS Code with URLs",href:"https://code.visualstudio.com/docs/editor/command-line#_opening-vs-code-with-urls"})),new n.Setting(i).setName("Open current file").setDesc("Open the current file rather than the root of the vault.").addToggle(s=>s.setValue(this.plugin.settings.openFile||o.openFile).onChange(e=>{this.plugin.settings.openFile=e,this.plugin.saveData(this.plugin.settings)})),new n.Setting(i).setName("Path to VSCode Workspace").setDesc('Defaults to the {{vaultpath}} template variable. You can set this to an absolute path to a ".code-workspace" file if you prefer to use a ').addText(s=>s.setPlaceholder(o.workspacePath).setValue(this.plugin.settings.workspacePath||o.workspacePath).onChange(e=>{e=e.trim(),e===""&&(e=o.workspacePath),this.plugin.settings.workspacePath=e,this.plugin.saveData(this.plugin.settings)})).descEl.appendChild(createEl("a",{text:"multi-root workspace",href:"https://code.visualstudio.com/docs/editor/workspaces#_multiroot-workspaces"})).appendText("."),new n.Setting(i).setName("Open VSCode using a 'vscode-insiders://' URL").addToggle(s=>s.setValue(this.plugin.settings.useUrlInsiders).onChange(e=>{this.plugin.settings.useUrlInsiders=e,this.plugin.saveSettings()}))}};var I=require("child_process"),p=class p extends l.Plugin{constructor(){super(...arguments);this.DEV=!1;this.logTag=`[${this.manifest.id}]`}async onload(){var s;console.log("Loading "+this.manifest.name+" plugin"),(0,l.addIcon)(p.iconId,p.iconSvgContent),await this.loadSettings(),this.refreshIconRibbon(),this.addSettingTab(new m(this.app,this)),this.addCommand({id:"open-vscode",name:"Open as Visual Studio Code workspace",callback:this.openVSCode.bind(this)}),this.addCommand({id:"open-vscode-via-url",name:"Open as Visual Studio Code workspace using a vscode:// URL",callback:this.openVSCodeUrl.bind(this)}),this.registerEvent(this.app.workspace.on("file-menu",this.fileMenuHandler.bind(this)));let t=this.app.plugins.getPlugin("hot-reload");this.DEV=(s=t==null?void 0:t.enabledPlugins.has(this.manifest.id))!=null?s:!1,this.DEV&&(this.addCommand({id:"open-vscode-reload",name:"Reload the plugin in dev",callback:this.reload.bind(this)}),this.addCommand({id:"open-vscode-reset-settings",name:"Reset plugins settings to default in dev",callback:this.resetSettings.bind(this)}))}openVSCode(t=this.app.workspace.getActiveFile()){var f,w,C,S,T,V;if(!(this.app.vault.adapter instanceof l.FileSystemAdapter))return;let{executeTemplate:s}=this.settings,e=this.app.vault.adapter.getBasePath(),c=(f=t==null?void 0:t.path)!=null?f:"",g=(C=(w=t==null?void 0:t.parent)==null?void 0:w.path)!=null?C:"",a=(S=this.app.workspace.getActiveViewOfType(l.MarkdownView))==null?void 0:S.editor.getCursor(),h=((T=a==null?void 0:a.line)!=null?T:0)+1,u=((V=a==null?void 0:a.ch)!=null?V:0)+1,r=s.trim()===""?o.executeTemplate:s;r=r.replaceAll("{{vaultpath}}",e).replaceAll("{{filepath}}",c).replaceAll("{{folderpath}}",g).replaceAll("{{line}}",h.toString()).replaceAll("{{ch}}",u.toString()),this.DEV&&console.log(this.logTag,{command:r}),(0,I.exec)(r,x=>{x&&console.error(`${this.logTag} exec error: ${x.message}`)})}openVSCodeUrl(){var u;if(!(this.app.vault.adapter instanceof l.FileSystemAdapter))return;let{openFile:t,useUrlInsiders:s}=this.settings,e=this.app.vault.adapter.getBasePath(),c=this.app.workspace.getActiveFile(),g=(u=c==null?void 0:c.path)!=null?u:"";this.DEV&&console.log(this.logTag,{settings:this.settings,path:e,filePath:g});let a=s?"vscode-insiders":"vscode",h=`${a}://file/${e}`;if(t){h+=`/${g}`;let r=this.settings.workspacePath.replaceAll("{{vaultpath}}",e);window.open(`${a}://file/${r}`),setTimeout(()=>{this.DEV&&console.log(this.logTag,{url:h}),window.open(h)},200)}else this.DEV&&console.log(this.logTag,{url:h}),window.open(h)}async loadSettings(){this.settings=Object.assign({},o,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}refreshIconRibbon(){var t;(t=this.ribbonIcon)==null||t.remove(),this.settings.ribbonIcon&&(this.ribbonIcon=this.addRibbonIcon(p.iconId,"VSCode",()=>{this.settings.ribbonCommandUsesCode?this.openVSCode():this.openVSCodeUrl()}))}fileMenuHandler(t,s){this.settings.showFileContextMenuItem&&t.addItem(e=>{e.setTitle("Open in VS Code").setIcon(p.iconId).onClick(()=>{this.openVSCode(s)})})}async reload(){let t=this.manifest.id,s=this.app.plugins;await s.disablePlugin(t),await s.enablePlugin(t),console.log(`${this.logTag} reloaded`,this)}async resetSettings(){console.log(this.logTag,{old:this.settings,default:o}),this.settings=o,await this.saveData(this.settings)}};p.iconId="vscode-logo",p.iconSvgContent=`
<svg role="img" viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg">
    <title>Visual Studio Code</title>
    <path
        fill="currentColor"
        d="M23.15 2.587L18.21.21a1.494 1.494 0 0 0-1.705.29l-9.46 8.63-4.12-3.128a.999.999 0 0 0-1.276.057L.327 7.261A1 1 0 0 0 .326 8.74L3.899 12 .326 15.26a1 1 0 0 0 .001 1.479L1.65 17.94a.999.999 0 0 0 1.276.057l4.12-3.128 9.46 8.63a1.492 1.492 0 0 0 1.704.29l4.942-2.377A1.5 1.5 0 0 0 24 20.06V3.939a1.5 1.5 0 0 0-.85-1.352zm-5.146 14.861L10.826 12l7.178-5.448v10.896z"
    />
</svg>
`;var b=p;

/* nosourcemap */